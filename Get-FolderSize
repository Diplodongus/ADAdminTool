function Get-FolderSize {
    param (
        [string]$folderPath,
        [int]$depth
    )

    $results = @()

    function ConvertTo-ReadableSize {
        param (
            [int64]$bytes
        )
        if ($bytes -ge 1GB) {
            "{0:N2} GB" -f ($bytes / 1GB)
        } elseif ($bytes -ge 1MB) {
            "{0:N2} MB" -f ($bytes / 1MB)
        } elseif ($bytes -ge 1KB) {
            "{0:N2} KB" -f ($bytes / 1KB)
        } else {
            "$bytes B"
        }
    }

    function Get-Size {
        param (
            [string]$path
        )
        (Get-ChildItem -Path $path -File | Measure-Object -Property Length -Sum).Sum
    }

    function Get-SubfolderSizes {
        param (
            [string]$folder,
            [int]$currentDepth
        )
        
        if ($currentDepth -gt $depth) {
            return
        }
        
        $folderSize = Get-Size -path $folder
        $results += [PSCustomObject]@{
            'Folder' = $folder
            'Size' = ConvertTo-ReadableSize -bytes $folderSize
        }
        
        foreach ($subfolder in Get-ChildItem -Path $folder -Directory) {
            Get-SubfolderSizes -folder $subfolder.FullName -currentDepth ($currentDepth + 1)
        }
    }

    Get-SubfolderSizes -folder $folderPath -currentDepth 1
    $results | Format-Table -AutoSize
}

# Prompt for folder path
$folderPath = Read-Host "Please enter the folder path"

# Check if the folder exists
if (Test-Path -Path $folderPath -PathType Container) {
    Get-FolderSize -folderPath $folderPath -depth 5
}
else {
    Write-Host "The specified folder does not exist."
}
